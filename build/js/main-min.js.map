{"version":3,"sources":["../../source/js/main.js"],"names":["window","jQuery","$","ME","startListeners","gsap","utils","toArray","forEach","section","timeline","scrollTrigger","trigger","start","end","offsetWidth","scrub","pin","anticipatePin","defaults","ease","fromTo","querySelector","xPercent","x","ready","_init","not","click","event","location","pathname","replace","this","hostname","target","hash","length","slice","preventDefault","animate","scrollTop","offset","top","$target","focus","is","attr"],"mappings":"6GAGAA,OAAOC,OAASD,OAAOE,EAAIA,EAAAA,QAK3B,IAAIC,EAAK,CAIRA,MAAW,WACRA,EAAGC,kBAGND,eAAoB,WAEjBE,KAAKC,MAAMC,QAAQ,aAAaC,SAAQC,IAC9BJ,KAAKK,SAAS,CACrBC,cAAe,CACdC,QAASH,EACTI,MAAO,UAEPC,IAAK,IAAM,KAAOL,EAAQM,YAC1BC,OAAO,EACPC,KAAK,EACDC,cAAe,GAEpBC,SAAU,CAACC,KAAM,UAGhBC,OAAOZ,EAAQa,cAAc,WAAY,CAAEC,SAAU,IAAKC,EAAG,GAAI,CAACD,SAAU,IAE5EF,OAAOZ,EAAQa,cAAc,0BAA2B,CAACC,UAAW,IAAKC,EAAG,GAAI,CAACD,SAAU,GAAI,QAWvGrB,EAAAA,UAAIuB,OAAM,WACTtB,EAAGuB,WAMJxB,EAAAA,QAAE,gBAECyB,IAAI,cACJA,IAAI,eACJC,OAAM,SAASC,GAEd,GACEC,SAASC,SAASC,QAAQ,MAAO,KAAOC,KAAKF,SAASC,QAAQ,MAAO,KAErEF,SAASI,UAAYD,KAAKC,SAC1B,CAEA,IAAIC,EAASjC,EAAAA,QAAE+B,KAAKG,OACpBD,EAASA,EAAOE,OAASF,EAASjC,EAAAA,QAAE,SAAW+B,KAAKG,KAAKE,MAAM,GAAK,MAEzDD,SAETR,EAAMU,iBACNrC,EAAAA,QAAE,cAAcsC,QAAQ,CACtBC,UAAWN,EAAOO,SAASC,KAC1B,KAAM,WAGP,IAAIC,EAAU1C,EAAAA,QAAEiC,GAEhB,GADAS,EAAQC,QACJD,EAAQE,GAAG,UACb,OAAO,EAEPF,EAAQG,KAAK,WAAW,MACxBH,EAAQC","sourcesContent":["import $ from \"jquery\";\nimport 'slick-carousel';\n\nwindow.jQuery = window.$ = $; \n\n\n// Main JS file\n\nvar ME = {};\n\n(function($) {\n\n\tME._init = function() {\t    \n    ME.startListeners();      \n\t}\n  \n\tME.startListeners = function() {         \n    \n    gsap.utils.toArray(\".parallax\").forEach(section => {\n    \tlet tl = gsap.timeline({\n    \t\t\tscrollTrigger: {\n    \t\t\t\ttrigger: section,\n    \t\t\t\tstart: \"top top\",\n            // makes the height of the scrolling (while pinning) match the width, thus the speed remains constant (vertical/horizontal)\n    \t\t\t\tend: () => \"+=\" + section.offsetWidth, \n    \t\t\t\tscrub: true,\n    \t\t\t\tpin: true,\n            anticipatePin: 1\n    \t\t\t},\n    \t\t\tdefaults: {ease: \"none\"}\n    \t\t});\n    \t// animate the container one way...\n    \ttl.fromTo(section.querySelector(\"#slide2\"), { xPercent: 100, x: 0}, {xPercent: 0})\n    \t  // ...and the image the opposite way (at the same time)\n    \t  .fromTo(section.querySelector(\"#slide2 .slide-wrapper\"), {xPercent: -100, x: 0}, {xPercent: 0}, 0);\n    });\n    \n\t}\n  \n\n  \n\t\n\n})($);\n\n$().ready(function() {\n\tME._init(); \n});\n\n\n\n// Select all links with hashes\n$('a[href*=\"#\"]')\n  // Remove links that don't actually link to anything\n  .not('[href=\"#\"]')\n  .not('[href=\"#0\"]')\n  .click(function(event) {\n    // On-page links\n    if (\n      location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') \n      && \n      location.hostname == this.hostname\n    ) {\n      // Figure out element to scroll to\n      var target = $(this.hash);\n      target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n      // Does a scroll target exist?\n      if (target.length) {\n        // Only prevent default if animation is actually gonna happen\n        event.preventDefault();\n        $('html, body').animate({\n          scrollTop: target.offset().top\n        }, 1000, function() {\n          // Callback after animation\n          // Must change focus!\n          var $target = $(target);\n          $target.focus();\n          if ($target.is(\":focus\")) { // Checking if the target was focused\n            return false;\n          } else {\n            $target.attr('tabindex','-1'); // Adding tabindex for elements not focusable\n            $target.focus(); // Set focus again\n          }\n        });\n      }\n    }\n  });"]}