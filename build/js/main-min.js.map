{"version":3,"sources":["../../source/js/main.js"],"names":["window","jQuery","$","ME","_init","startListeners","slides","gsap","utils","toArray","shift","set","xPercent","x","section","document","querySelector","tl","timeline","scrollTrigger","trigger","start","end","offsetWidth","scrub","pin","pinSpacing","defaults","ease","forEach","slide","i","fromTo","setTimeout","async","to","y","duration","ready","not","click","event","location","pathname","replace","this","hostname","target","hash","length","slice","preventDefault","animate","scrollTop","offset","top","$target","focus","is","attr"],"mappings":"yBAEAA,OAAOC,OAASD,OAAOE,EAAIA,EAK3B,IAAIC,EAAK,IAET,SAAUD,GAETC,EAAGC,MAAQ,WACRD,EAAGE,kBAGLF,EAAGE,eAAiB,WAGlB,IAAIC,EAASC,KAAKC,MAAMC,QAAQ,UAChCH,EAAOI,QACPH,KAAKI,IAAIL,EAAQ,CAACM,UAAW,IAAKC,EAAG,IACrC,IAAIC,EAAUC,SAASC,cAAc,WACnCC,EAAKV,KAAKW,SAAS,CACjBC,cAAe,CACbC,QAAS,UACTC,MAAO,UACPC,IAAK,IAAM,KAAOR,EAAQS,YAC1BC,OAAO,EACPC,KAAK,EACLC,YAAY,GAGdC,SAAU,CAACC,KAAM,UAErBtB,EAAOuB,SAAQ,CAACC,EAAOC,KACX,GAALA,EACHd,EAAGe,OAAOF,EAAO,CACflB,SAAU,IACVC,EAAG,GACF,CACDD,SAAU,IAEXoB,OAAOF,EAAMd,cAAc,kBAAmB,CAC7CJ,UAAW,IACXC,EAAG,GACF,CACDD,SAAU,GACT,KAGHK,EAAGe,OAAOF,EAAO,CACflB,UAAW,IACXC,EAAG,GACF,CACDD,SAAU,IAEXoB,OAAOF,EAAMd,cAAc,kBAAmB,CAC7CJ,SAAU,IACVC,EAAG,GACF,CACDD,SAAU,GACT,SAYHqB,YAAWC,UACR3B,KAAK4B,GAAG,KAAM,CAACC,EAAG,KAAMC,SAAU,OAElC,CAAC,MAnEZ,CAyEGnC,GAEHA,IAAIoC,OAAM,WACTnC,EAAGC,WAMJF,EAAE,gBAECqC,IAAI,cACJA,IAAI,eACJC,OAAM,SAASC,GAEd,GACEC,SAASC,SAASC,QAAQ,MAAO,KAAOC,KAAKF,SAASC,QAAQ,MAAO,KAErEF,SAASI,UAAYD,KAAKC,SAC1B,CAEA,IAAIC,EAAS7C,EAAE2C,KAAKG,OACpBD,EAASA,EAAOE,OAASF,EAAS7C,EAAE,SAAW2C,KAAKG,KAAKE,MAAM,GAAK,MAEzDD,SAETR,EAAMU,iBACNjD,EAAE,cAAckD,QAAQ,CACtBC,UAAWN,EAAOO,SAASC,KAC1B,KAAM,WAGP,IAAIC,EAAUtD,EAAE6C,GAEhB,GADAS,EAAQC,QACJD,EAAQE,GAAG,UACb,OAAO,EAEPF,EAAQG,KAAK,WAAW,MACxBH,EAAQC","sourcesContent":["//import $ from \"jquery\";\n\nwindow.jQuery = window.$ = $; \n\n\n// Main JS file\n\nvar ME = {};\n\n(function($) {\n\n\tME._init = function() {\t    \n    ME.startListeners();  \n\t}\n  \n  ME.startListeners = function() {         \n    \n\n    let slides = gsap.utils.toArray(\".slide\");\n    slides.shift(); // leave the first slide alone (remove it from the Array)\n    gsap.set(slides, {xPercent: -100, x: 0});\n    let section = document.querySelector(\"#group1\"),\n      tl = gsap.timeline({\n        scrollTrigger: {\n          trigger: \"#group1\",\n          start: \"top top\",\n          end: () => \"+=\" + section.offsetWidth, \n          scrub: true,\n          pin: true,\n          pinSpacing: false,\n          //anticipatePin: 1\n        },\n        defaults: {ease: \"none\"}\n      });\n    slides.forEach((slide, i) => {\n      if ( i == 1) { // check if first slide\n        tl.fromTo(slide, {\n          xPercent: 100,\n          x: 0,\n        }, {\n          xPercent: 0,\n        })\n        .fromTo(slide.querySelector(\".slide-wrapper\"), {\n          xPercent: -100,\n          x: 0\n        }, {\n          xPercent: 0,\n        }, \"<\");\n      }\n      else { // check if not first slide\n        tl.fromTo(slide, {\n          xPercent: -100,\n          x: 0,\n        }, {\n          xPercent: 0,\n        })\n        .fromTo(slide.querySelector(\".slide-wrapper\"), {\n          xPercent: 100,\n          x: 0\n        }, {\n          xPercent: 0,\n        }, \"<\");\n      }\n      \n    });\n\n\n\n  \t}\n    \n\n    \n    const animateText = () => {\n        setTimeout(async () => {\n           gsap.to(\"h1\", {y: \"0%\", duration: 0.5})\n           //gsap.to(\".introText\", {y: \"0%\", duration: 0.4, delay: 0.8})  \n        }, [2000])\n    }\n    \n    animateText();    \n  \n\n})($);\n\n$().ready(function() {\n\tME._init(); \n});\n\n\n\n// Select all links with hashes\n$('a[href*=\"#\"]')\n  // Remove links that don't actually link to anything\n  .not('[href=\"#\"]')\n  .not('[href=\"#0\"]')\n  .click(function(event) {\n    // On-page links\n    if (\n      location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') \n      && \n      location.hostname == this.hostname\n    ) {\n      // Figure out element to scroll to\n      var target = $(this.hash);\n      target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n      // Does a scroll target exist?\n      if (target.length) {\n        // Only prevent default if animation is actually gonna happen\n        event.preventDefault();\n        $('html, body').animate({\n          scrollTop: target.offset().top\n        }, 1000, function() {\n          // Callback after animation\n          // Must change focus!\n          var $target = $(target);\n          $target.focus();\n          if ($target.is(\":focus\")) { // Checking if the target was focused\n            return false;\n          } else {\n            $target.attr('tabindex','-1'); // Adding tabindex for elements not focusable\n            $target.focus(); // Set focus again\n          }\n        });\n      }\n    }\n  });"]}